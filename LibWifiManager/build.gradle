plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'maven-publish'
}

android {
    namespace 'com.common.anni.wifimanager'
    compileSdk 33

    defaultConfig {
        minSdk 21
        targetSdk 33
        versionCode 1
        versionName "0.0.1"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    android.libraryVariants.all {
        variant ->
            variant.outputs.all {
                outputFileName = "WiFiManagerSDK" + "@" + defaultConfig.versionName + "_" + buildType.name + ".aar"
            }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    publishing {
        singleVariant("release")
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.8.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.9.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}

task generateSourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier 'sources'
}

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                from components.release         // 表示发布 release（jitpack 都不会使用到）
                groupId = 'com.github.yomigatz.utils' // 这个是依赖库的组 id
                artifactId = 'WiFiManagerSDK'       // 依赖库的名称（jitpack 都不会使用到）
                version = "0.0.1"                //当前版本依赖库版本号，这个jitpack不会使用到，只是我们开发者自己查看
            }
        }
    }
}